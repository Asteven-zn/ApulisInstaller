{% import 'macros/common.j2' as util with context %}
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: node-cleaner-{{ arch_map[ansible_architecture] }}
  namespace: default
  labels:
     run: node-cleaner
spec:
  selector:
    matchLabels:
      app: node-cleaner-{{ arch_map[ansible_architecture] }}
  template:
    metadata:
      labels:
        app: node-cleaner-{{ arch_map[ansible_architecture] }}
    spec:
      {{ util.dns_policy() }}
      {% if true %}
      hostNetwork: true
      {% endif %}
      nodeSelector:
        gpuType: huawei_npu_arm64
      containers:
      - name: node-cleaner
        image: {{ util.image_name('node-cleaner') }}
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /root/config.yaml
          name: appconfig
          subPath: config.yaml
        - mountPath: /data
          name: aiplatform-model-data-pvc
        - mountPath: /root/logs
          name: npulog
      env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      volumes:
      - name: appconfig
        configMap:
          name: node-cleaner-cm
      - name: aiplatform-model-data-pvc
        persistentVolumeClaim:
          claimName: aiplatform-model-data-pvc
      - name: npulog
        hostPath:
          path: /var/log/npu/slog
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
