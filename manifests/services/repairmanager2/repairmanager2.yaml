{% import 'macros/common.j2' as util with context %}
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: repairmanager2-{{ arch_map[ansible_architecture] }}
  namespace: default
spec:
  selector:
    matchLabels:
      repairmanager-node: pod
  template:
    metadata:
      name: repairmanager2-{{ arch_map[ansible_architecture] }}
      labels:
        repairmanager-node: pod
        app: repairmanager
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
    spec:
      {{ util.dns_policy() }}
      hostNetwork: true    
      nodeSelector:
        repairmanager: active
        archType: {{ arch_map[ansible_architecture] }}
      containers:
      - name: repairmanager
        image: {{ util.image_name('repairmanager2') }}
        command: ["/run.sh"]
        imagePullPolicy: Always
        env:
        - name: PROMETHEUS_URL
          value: http://{{service["repair-manager"]["prometheus-ip"]}}:{{service["repair-manager"]["prometheus-port"]}}
        volumeMounts:
        - mountPath: /usr/bin/kubectl
          name: kubectl-binary
          readOnly: true
        - mountPath: /root/.kube/config
          name: kubeconfig
          readOnly: true
        - mountPath: {{service["storage-mount-path"]}}/work
          name: dlwsdatawork
        - mountPath: {{service["storage-mount-path"]}}/storage
          name: dlwsdatadata 
        - mountPath: {{service["storage-mount-path"]}}/jobfiles
          name: dlwsdatajobfiles
        - mountPath: {{service["dltsdata-storage-mount-path"]}}
          name: dltsdata
        - mountPath: {{service["folder_auto_share"]}}
          name: folderautoshare
        - mountPath: /var/log/dlworkspace
          name: log
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 30
          successThreshold: 1
          tcpSocket:
            port: 9200
          timeoutSeconds: 10
      volumes:
      - name: kubectl-binary
        hostPath:
          path: /usr/bin/kubectl
      - name: kubeconfig
        hostPath:
          path: /etc/kubernetes/admin.conf
      - name: dlwsdatawork
        hostPath:
          path: {{service["storage-mount-path"]}}/work
      - name: dlwsdatadata
        hostPath:
          path: {{service["storage-mount-path"]}}/storage
      - name: dlwsdatajobfiles
        hostPath:
          path: {{service["storage-mount-path"]}}/jobfiles
      - name: dltsdata
        hostPath:
          path: {{service["dltsdata-storage-mount-path"]}}
      - name: folderautoshare
        hostPath:
          path: {{service["folder_auto_share"]}}
      - name: log
        hostPath:
          path: /var/log/clustermanager   
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - key: node-role.kubernetes.io/master
        effect: NoSchedule           
