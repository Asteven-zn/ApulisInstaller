{% import 'macros/common.j2' as util with context %}

{% if service["alert-manager"]["configured"] is defined %}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alert-manager
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alert-manager
  template:
    metadata:
      name: alert-manager
      labels:
        app: alert-manager
      annotations:
        prometheus.io/alert: "true"
        prometheus.io/port: "{{ service['alert-manager']['port'] }}"
    spec:
      nodeSelector:
        alert-manager: active
        archType: {{ arch_map[ansible_architecture] }}
      hostNetwork: true
      containers:
      - name: alert-manager
        image: {{ util.image_fullname('alertmanager', 'third') }}
        args:
          - '--config.file=/etc/alertmanager/config.yml'
          - '--storage.path=/alertmanager'
          - '--web.external-url=http://localhost/alert-manager/'
          - '--web.route-prefix=alert-manager'
        ports:
        - name: alert-manager
          containerPort: {{ service["alert-manager"]["port"] }}
        volumeMounts:
        - name: config-volume
          mountPath: /etc/alertmanager
        - name: storage
          mountPath: /alertmanager
        - name: templates-volume
          mountPath: /etc/alertmanager/template
      {% if service["alert-manager"]["reaper"] is defined %}
      - name: reaper
        image: {{ util.image_fullname("reaper", 'third') }}
        command:
          - 'python'
          - '/reaper/main.py'
          - '--port'
          - '{{ service["alert-manager"]["reaper"]["port"] }}'
          - '--restful_url'
          - '{{ service["alert-manager"]["reaper"]["restful-url"] }}'
          {% if service["alert-manager"]["reaper"]["dry-run"] is defined %}
          - '--dry_run'
          {% endif %}
        ports:
        - name: alert-manager
          containerPort: {{ service["alert-manager"]["reaper"]["port"] }}
      {% endif %}
      {% if service["private_docker_registry_username"] is defined %}
      imagePullSecrets:
      - name: svccred
      {% endif %}
      volumes:
      - name: config-volume
        configMap:
          name: alert-manager
      - name: templates-volume
        configMap:
          name: alert-templates
      - name: storage
        emptyDir: {}
      tolerations:
      - key: node.kubernetes.io/memory-pressure
        operator: "Exists"
      - key: node.kubernetes.io/disk-pressure
        operator: "Exists"
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
---
{% endif %}
kind: ConfigMap
apiVersion: v1
metadata:
  name: alert-manager
  namespace: kube-system
data:
  config.yml: |-
{% if service["alert-manager"]["configured"] %}
{% set alert_info = service["alert-manager"] %}
    global:
      resolve_timeout: 5m
      smtp_smarthost: {{ alert_info["smtp_url"] }}
      smtp_from: {{ alert_info["smtp_from"] }}
      smtp_auth_username: {{ alert_info["smtp_auth_username"] }}
      smtp_auth_password: {{ alert_info["smtp_auth_password"] }}
    templates:
    - "/etc/alertmanager/template/*.tmpl"
    route:
      repeat_interval: 24h
      receiver: alert-email
      group_wait: 30s
      group_interval: 5m
      group_by: [alertname, cluster]
      routes:
      - receiver: idle_gpu_receiver
        repeat_interval: 4h
        group_by: [alertname, user_email, cluster]
        match_re:
          type: idle_gpu
          alertname: "zero-gpu-usage"
      - receiver: job_state_change_receiver
        group_by: [alertname, user_email, cluster, subject]
        match_re:
          type: user_alert
          alertname: "job-state-changed"
      - receiver: reaper
        group_by: [alertname, user_email, job_name]
        group_wait: 0s
        match_re:
          type: reaper
      - receiver: kill_idle_job_email
        group_by: [alertname, user_email, cluster]
        group_wait: 0s
        match_re:
          type: kill_idle_job_email
          alertname: "kill-idle-jobs-email"
    receivers:
    - name: "alert-email"
      email_configs:
        - to: {{ alert_info["receiver"] }}
          html: '{{ "{{" }} template "email.html" . {{ "}}" }}'
          headers:
            subject: '{{ "{{" }} .GroupLabels.cluster {{ "}}" }}: {{ "{{" }} template "__subject" . {{ "}}" }}'
    - name: "idle_gpu_receiver"
      email_configs:
        {% if service["alert-manager"]["alert_users"] %}
        - to: '{{ "{{" }} .GroupLabels.user_email {{ "}}" }},{{ alert_info["receiver"] }}'
        {% else %}
        - to: '{{ alert_info["receiver"] }}'
        {% endif %}
          html: '{{ "{{" }} template "idle_gpu.html" . {{ "}}" }}'
          headers:
            {% if service["alert-manager"]["alert_users"] %}
            To: '{{ "{{" }} .GroupLabels.user_email {{ "}}" }}'
            CC: '{{ alert_info["receiver"] }}'
            {% endif %}
            subject: '{{ "{{" }} .GroupLabels.cluster {{ "}}" }}: {{ "{{" }} template "__subject" . {{ "}}" }}'
    - name: "job_state_change_receiver"
      email_configs:
        {% if service["alert-manager"]["alert_users"] %}
        - to: '{{ "{{" }} .GroupLabels.user_email {{ "}}" }},{{ alert_info["receiver"] }}'
        {% else %}
        - to: '{{ alert_info["receiver"] }}'
        {% endif %}
          html: '{{ "{{" }} template "job_state.html" . {{ "}}" }}'
          headers:
            {% if service["alert-manager"]["alert_users"] %}
            To: '{{ "{{" }} .GroupLabels.user_email {{ "}}" }}'
            CC: '{{ alert_info["receiver"] }}'
            {% endif %}
            subject: '{{ "{{" }} .GroupLabels.cluster {{ "}}" }}: {{ "{{" }} template "__subject" . {{ "}}" }}'
    - name: "reaper"
      {% if service["alert-manager"]["reaper"] %}
      webhook_configs:
        - send_resolved: False
          url: 'http://localhost:{{ service["alert-manager"]["reaper"]["port"] }}/kill'
          http_config:
            bearer_token: 'shinigami'
    - name: "kill_idle_job_email"
      email_configs:
        {% if service["alert-manager"]["alert_users"] %}
        - to: '{{ "{{" }} .GroupLabels.user_email {{ "}}" }},{{ alert_info["receiver"] }}'
        {% else %}
        - to: '{{ alert_info["receiver"] }}'
        {% endif %}
          html: '{{ "{{" }} template "kill_idle.html" . {{ "}}" }}'
          headers:
            {% if service["alert-manager"]["alert_users"] %}
            To: '{{ "{{" }} .GroupLabels.user_email {{ "}}" }}'
            CC: '{{ alert_info["receiver"] }}'
            {% endif %}
            subject: '{{ "{{" }} .GroupLabels.cluster {{ "}}" }}: {{ "{{" }} template "__subject" . {{ "}}" }}'
      {% endif %}
{% endif %}
