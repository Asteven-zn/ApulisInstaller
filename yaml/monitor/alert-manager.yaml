
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alert-manager
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alert-manager
  template:
    metadata:
      name: alert-manager
      labels:
        app: alert-manager
      annotations:
        prometheus.io/alert: "true"
        prometheus.io/port: "9093"
    spec:
      nodeSelector:
        alert-manager: active
        archType: amd64
      hostNetwork: true
      containers:
      - name: alert-manager
        image: harbor.apulis.cn:8443/aiarts_v1.5.0_rc8/prom/alertmanager:v0.20.0

        args:
          - '--config.file=/etc/alertmanager/config.yml'
          - '--storage.path=/alertmanager'
          - '--web.external-url=http://localhost/alert-manager/'
          - '--web.route-prefix=alert-manager'
        ports:
        - name: alert-manager
          containerPort: 9093
        volumeMounts:
        - name: config-volume
          mountPath: /etc/alertmanager
        - name: storage
          mountPath: /alertmanager
        - name: templates-volume
          mountPath: /etc/alertmanager/template
      - name: reaper
        image: harbor.apulis.cn:8443/aiarts_v1.5.0_rc8/:v1.2.0

        command:
          - 'python'
          - '/reaper/main.py'
          - '--port'
          - '9500'
          - '--restful_url'
          - 'http://localhost:5000'
          - '--dry_run'
        ports:
        - name: alert-manager
          containerPort: 9500
      volumes:
      - name: config-volume
        configMap:
          name: alert-manager
      - name: templates-volume
        configMap:
          name: alert-templates
      - name: storage
        emptyDir: {}
      tolerations:
      - key: node.kubernetes.io/memory-pressure
        operator: "Exists"
      - key: node.kubernetes.io/disk-pressure
        operator: "Exists"
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: alert-manager
  namespace: kube-system
data:
  config.yml: |-
