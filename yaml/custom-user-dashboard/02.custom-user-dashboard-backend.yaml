apiVersion: v1
kind: Service
metadata:
  name: user-dashboard
  namespace: default
spec:
  ports:
  - port: 5001
  selector:
    app: custom-user-dashboard-backend-amd64
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: custom-user-dashboard-backend-amd64
  namespace: default
spec:
  selector:
    matchLabels:
      jobmanager-node: pod
  template:
    metadata:
      name: custom-user-dashboard-backend-amd64
      labels:
        jobmanager-node: pod
        app: custom-user-dashboard-backend-amd64
    spec:
      
      nodeSelector:
        jobmanager: active
        archType: amd64

      initContainers:
      #During this Pod's initialization, check that postgres service is up and running before starting this pod
      - name: check-postgres-ready
        image: harbor.apulis.cn:8443/aiarts_v1.5.0_rc8/apulistech/busybox:v1.28

        command: ['sh', '-c', "until nc -vz postgres.kube-system 5432; do echo 'Waiting for postgres service'; sleep 2; done;"]

      containers:
      - name: redis
        image: harbor.apulis.cn:8443/aiarts_v1.5.0_rc8/redis:5.0.6-alpine

        imagePullPolicy: Always
        command: ["redis-server", "--port", "9301", "--maxmemory", "100mb", "--maxmemory-policy", "allkeys-lru"]
        ports:
          - containerPort: 9301
            hostPort: 9301
            name: redis
            protocol: TCP
      - name: custom-user-dashboard-backend
        image: harbor.apulis.cn:8443/aiarts_v1.5.0_rc8/apulistech/custom-user-dashboard-backend:v1.5.0-rc8

        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /etc/app/config
          name: userdashboardconfig
        ports:
          - containerPort: 5001
            hostPort: 5001
            name: cm-backend-port
            protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 30
          successThreshold: 1
          tcpSocket:
            port: 5001
          timeoutSeconds: 10

      volumes:
      - name: userdashboardconfig
        configMap:
          name: custom-user-dashboard-cm

      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
