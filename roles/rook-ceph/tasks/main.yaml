- name: 给ceph集群节点打rook标签
  command: >-
      {{ bin_dir }}/kubectl label node {{ inventory_hostname }} rook-node=active --overwrite=true
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: 给ceph集群节点打mon标签
  command: >-
      {{ bin_dir }}/kubectl label node {{ inventory_hostname }} ceph-mon=active --overwrite=true
  delegate_to: "{{ groups['kube-master'][0] }}"
  when:
    - "{{ hostvars[inventory_hostname]['mon'] is defined }}"
    - "{{ hostvars[inventory_hostname]['mon'] == 'yes' }}"

- name: Ensure rook directories to exist
  file:  # noqa 208
    path: "{{ manifest_dest }}/{{ item }}/"
    state: directory
  with_items:
    - rook-ceph
    - storage

- name: copy rook yamls to destination
  copy:
    dest: "{{ manifest_dest }}/rook-ceph/{{item}}"
    src: "{{ item }}"
  with_items:
    - 01.crds.yaml
    - 02.common.yaml
    - 05.filesystem.yaml
    - 06.toolbox.yaml

- name: generate rook template files
  template:
    lstrip_blocks: yes
    trim_blocks: yes
    dest: "{{ manifest_dest }}/rook-ceph/{{item}}"
    src: "{{item}}.j2"
  with_items:
    - 03.operator.yaml
    - 04.cluster.yaml
    - 07.dashboard-external-https.yaml

- name: deploy rook/crds.yaml
  run_once: true
  shell: "{{ bin_dir }}/kubectl apply -f {{ manifest_dest }}/rook-ceph/01.crds.yaml"

- name: deploy rook/common.yaml
  run_once: true
  shell: "{{ bin_dir }}/kubectl apply -f {{ manifest_dest }}/rook-ceph/02.common.yaml"

- include_tasks: operator.yaml

- include_tasks: cluster.yaml

- name: deploy rook/filesystem.yaml
  run_once: true
  shell: "{{ bin_dir }}/kubectl apply -f {{ manifest_dest }}/rook-ceph/05.filesystem.yaml"

- name: deploy rook/toolbox.yaml
  run_once: true
  shell: "{{ bin_dir }}/kubectl apply -f {{ manifest_dest }}/rook-ceph/06.toolbox.yaml"

- name: deploy rook/dashboard.yaml
  run_once: true
  shell: "{{ bin_dir }}/kubectl apply -f {{ manifest_dest }}/rook-ceph/07.dashboard-external-https.yaml"

- name: extract ceph admin auth key
  shell: "{{ bin_dir }}/kubectl exec -it -n rook-ceph deploy/rook-ceph-tools -- ceph auth get-key client.admin | base64"
  register: ceph_key_output
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: copy the output to a local file
  template:
    lstrip_blocks: yes
    trim_blocks: yes
    dest: "{{ manifest_dest }}/storage/01.client-secret.yaml"
    src: pvc/01.client-secret.yaml.j2
  vars:
    - secret: "{{ ceph_key_output.stdout }}"
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: generate pvc and pv service yaml files
  template:
    lstrip_blocks: yes
    trim_blocks: yes
    dest: "{{ manifest_dest }}/storage/{{item}}"
    src: "pvc/{{item}}.j2"
  with_items:
    - 01.appdata-pv.yaml
    - 02.component-data-pv.yaml
    - 03.labeldata-pv.yaml
    - 04.modeldata-pv.yaml