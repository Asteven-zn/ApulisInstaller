# tasks file for roles/nfs-mount
- name: Install NFS mount utility
  become: true
  apt:
    name:
      - nfs-common
      - nfs-kernel-server
    state: present
  when: ansible_os_family == "Debian"

- name: Ensure directories to export exist
  file:  # noqa 208
    path: "{{ item.value['nfs_path'] }}"
    state: directory
  with_dict: "{{ nfs_pv_pvc_mounts }}"

- name: export the directories editing the file /etc/exports
  lineinfile:
    dest: /etc/exports
    regexp: "^{{ item.value['nfs_path'] | regex_replace('\\/$', '') }}"
    line: "{{ item.value['nfs_path'] }} *{{ nfs_export_opts }}"
    state: present
    create: yes
  with_dict:
    - "{{ nfs_pv_pvc_mounts }}"
  register: nfs_exports_result

- name: Ensure storage yaml directories to exist
  file:
    path: "{{ manifest_dest }}/storage/"
    state: directory

- name: generate pvc and pv service yaml files
  template:
    lstrip_blocks: yes
    trim_blocks: yes
    dest: "{{ manifest_dest }}/storage/{{item}}"
    src: "{{item}}.j2"
  with_items:
    - 01.appdata-pv.yaml
    - 02.component-data-pv.yaml
    - 03.labeldata-pv.yaml
    - 04.modeldata-pv.yaml

- include: "nfs-server-{{ansible_os_family}}.yaml"

- name: Ensure rpcbind is running
  service: name=rpcbind state=started enabled=yes
  when: not nfs_only_v4

- name: Restart NFS server service
  service: name={{NFS_SERVICE}} state=restarted enabled=yes
  when: nfs_exports_result is changed

- name: Check if NFS server service is started
  service: name={{NFS_SERVICE}} state=started

- name: Ensure rpcbind is stopped
  service: name=rpcbind state=stopped enabled=no
  when: nfs_only_v4

- name: Ensure rpcbind.socket is stopped
  service: name=rpcbind.socket state=stopped enabled=no
  when: ansible_os_family == "RedHat" and nfs_only_v4

