# tasks file for roles/nfs-mount
- name: Install NFS mount utility
  become: true
  apt:
    name:
      - nfs-common
      - nfs-kernel-server
    state: present
  when: ansible_os_family == "Debian"

- name: Ensure directories to export exist
  file:  # noqa 208
    path: "{{ item['nfs_path'] }}"
    state: directory
  with_items: "{{ nfs_pv_pvc_mounts }}"

- name: export the directories editing the file /etc/exports
  lineinfile:
    dest: /etc/exports
    regexp: "^{{ item['nfs_path'] | regex_replace('\\/$', '') }}"
    line: "{{ item['nfs_path'] }} *{{ nfs_export_opts }}"
    state: present
    create: yes
  with_items:
    - "{{ nfs_pv_pvc_mounts }}"
  register: nfs_exports_result

- name: Ensure storage yaml directories to exist
  file:
    path: "{{ manifest_dest }}/storage/"
    state: directory

- name: generate pvc and pv service yaml files
  template:
    dest: "{{ manifest_dest }}/storage/{{item['index']}}.{{item['name']}}{{ '-' + item['suffix'] if item['suffix'] != '' else '' }}.yaml"
    src: nfs-pvc-pv.yaml.j2
  vars:
    - name: "{{ item['name'] }}"
    - namespace: "{{ item.value['namespace'] | default('default') }}"
    - storage: "{{ item['storage'] }}"
    - accessModes: "{{ item['accessModes'] }}"
    - mountOpts: "{{ item['mountOpts'] | default(default_mount_opts) }}"
    - nfs_server: "{{ item['nfs_server'] }}"
    - nfs_path: "{{ item['nfs_path'] }}"
    - suffix: "{{  '-' + item['suffix'] if item['suffix'] != '' else '' }}"
  with_items:
    - "{{ nfs_pv_pvc_mounts }}"

- include: "nfs-server-{{ansible_os_family}}.yaml"

- name: Ensure rpcbind is running
  service: name=rpcbind state=started enabled=yes
  when: not nfs_only_v4

- name: Restart NFS server service
  service: name={{NFS_SERVICE}} state=restarted enabled=yes
  when: nfs_exports_result is changed

- name: Check if NFS server service is started
  service: name={{NFS_SERVICE}} state=started

- name: Ensure rpcbind is stopped
  service: name=rpcbind state=stopped enabled=no
  when: nfs_only_v4

- name: Ensure rpcbind.socket is stopped
  service: name=rpcbind.socket state=stopped enabled=no
  when: ansible_os_family == "RedHat" and nfs_only_v4

