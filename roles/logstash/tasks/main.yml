- name: 检查镜像是否存在
  docker_image_info:
    name:
      - "{{thirdparty_images['logstash']['name']}}:{{thirdparty_images['logstash']['tag']}}"
  register: result

- block:
  - name: 下发logstash镜像文件
    copy:
      src: "{{resource_dir}}/images/logstash.tar"
      dest: "/tmp/logstash.tar"

  - name: 导入kibana镜像
    docker_image:
      name: "{{thirdparty_images['logstash']['name']}}:{{thirdparty_images['logstash']['tag']}}"
      load_path: /tmp/logstash.tar
      source: load

  when: result.images | length == 0
  become: yes


- name: 确保目录存在
  file:
    path: "{{ manifest_dest }}/logstash"
    state: directory

- name: 创建logstash pipeline配置文件目录
  file:
    path: "{{ logstash_conf_dir }}/pipeline"
    state: directory

- name: 复制配置文件
  template: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - { src: 'templates/syslog.conf', dest: '/{{ logstash_conf_dir }}/pipeline/syslog.conf' }
    - { src: 'templates/beats.conf', dest: '/{{ logstash_conf_dir }}/pipeline/beats.conf' }
  notify: Restart logstash container

- name: 启动logstash容器
  docker_container:
    name: "logstash"
    image: "{{thirdparty_images['logstash']['name']}}:{{thirdparty_images['logstash']['tag']}}"
    env:
      XPACK_MONITORING_ELASTICSEARCH_HOSTS: "http://{{ groups['es-cluster'][0] }}:9200"
      XPACK_MONITORING_ENABLED: "true"
      XPACK_MONITORING_ELASTICSEARCH_USERNAME: "{{ elastic_user }}"
      XPACK_MONITORING_ELASTICSEARCH_PASSWORD: "{{ elastic_password }}"
      PATH_CONFIG: ""
      MONITORING.ELASTICSEARCH.HOSTs: "http://{{ groups['es-cluster'][0] }}:9200"
    volumes:
    - "{{ logstash_conf_dir }}/pipeline:/usr/share/logstash/pipeline:ro"
    ports:
    - 9600:5000
    - 9601:5044
    #network_mode: host
    log_driver: "{{ log_driver }}"
    log_options:
      max-size: "{{ log_max_size }}"
      max-file: "{{ log_max_file }}"
