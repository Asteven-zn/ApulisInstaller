- name: Ensure the directory exist
  file:
    path: credentials/rsa
    state: directory
  delegate_to: localhost

- name: 检查是否已经有密钥文件
  command: ls {{base_dir}}/credentials/rsa
  delegate_to: localhost
  register: result

- name: Generate an OpenSSH keypair with the default values (2048 bits, rsa)
  command: 'ssh-keygen -q -t rsa -f {{base_dir}}/credentials/rsa/id_rsa -C "" -N ""'
  delegate_to: localhost
  when: '"id_rsa" not in result.stdout'

- name: For each host, scan for its ssh public key
  shell: "ssh-keyscan {{ item }},`dig +short {{ item }}`"
  with_items: "{{ groups['cluster'] }}"
  register: ssh_known_host_results
  ignore_errors: yes

- name: Add/update the public key in the known_hosts
  known_hosts:
    name: "{{ item.item }}"
    key: "{{ item.stdout }}"
    state: "present"
    path: "/home/{{user_name}}/.ssh/known_hosts"
  with_items: "{{ ssh_known_host_results.results }}"

- name: Change known_hosts owner and group
  file:
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: '0644'
    path: "/home/{{user_name}}/.ssh/known_hosts"
  with_items: "{{ ssh_known_host_results.results }}"

- name: Add {{ user_name }} group to system
  user:
    name: "{{ user_name }}"
    state: present

- name: Add {{ user_name }} user to system
  user:
    name: "{{ user_name }}"
    group: "{{ user_name }}"
    state: present

- name: Set authorized key in alternate location
  authorized_key:
    state: present
    user: "{{ user_name }}"
    key: "{{ lookup('file', 'credentials/rsa/id_rsa.pub') }}"

- name: copy id_ssh_rsa files to node
  copy:
    src: "credentials/rsa/{{item.file}}"
    dest: "/home/{{user_name}}/.ssh/{{item.file}}"
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: "{{ item.perm }}"
  with_items:
    - { file: id_rsa, perm: '0600' }
    - { file: id_rsa.pub, perm: '0644' }
