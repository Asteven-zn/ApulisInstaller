- name: 获得系统完整的版本号，例如 18.04.1
  set_fact: UBUNTU_VERSION={{ansible_lsb['description'].split(' ')[1]}}

- name: 安装pip3 版本
  shell: "apt install -y python3-pip"
  when:
    - '"python3" in ansible_facts["discovered_interpreter_python"]'
    - 'INSTALL_SOURCE == "online"'

- name: 安装pip版本
  shell: "apt install -y python-pip"
  when:
    - '"python3" not in ansible_facts["discovered_interpreter_python"]'
    - 'INSTALL_SOURCE == "online"'

- name: 安装其他依赖包
  shell: "apt install -y {{ item }}"
  with_items:
    - acct
  when:
    - 'INSTALL_SOURCE == "online"'

# ubuntu 1804
- block:
    - name: 准备离线安装包目录
      file: name=/opt/kube/packages/common state=directory

    - name: 分发 basic_bionic 离线包
      copy:
        src: "{{ resource_dir }}/apt/{{ arch_map[ansible_architecture] }}/{{ item }}_{{UBUNTU_VERSION}}.tar.gz"
        dest: "/opt/kube/packages/common/{{ item }}"
      with_items:
        - basic

    - name: 解压离线包
      shell: 'cd /opt/kube/packages/common && tar zxf {{ item }}_{{UBUNTU_VERSION}}.tar.gz'
      with_items:
        - basic

    - name: 安装 basic_bionic 离线包
      shell: 'cd /opt/kube/packages/common && dpkg -i -R *.deb > /tmp/install_common.log 2>&1'
  when:
    - 'INSTALL_SOURCE == "offline"'
  ignore_errors: true