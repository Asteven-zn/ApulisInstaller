- name: 获得系统完整的版本号，例如 18.04.1
  set_fact: UBUNTU_VERSION={{ansible_lsb['description'].split(' ')[1]}}

- name: 安装pip3 版本
  shell: "apt install -y python3-pip"
  when:
    - '"python3" in ansible_facts["discovered_interpreter_python"]'
    - 'INSTALL_SOURCE == "online"'

- name: 安装pip版本
  shell: "apt install -y python-pip"
  when:
    - '"python3" not in ansible_facts["discovered_interpreter_python"]'
    - 'INSTALL_SOURCE == "online"'

- name: 下发Ubuntu-{{UBUNTU_VERSION}}系统的依赖包
  copy:
    src: "{{ item }}"
    dest: "/tmp/apt/"
  with_fileglob:
    - "{{resource_dir}}/apt/{{UBUNTU_VERSION}}/*"
  when:
    - 'INSTALL_SOURCE == "offline"'
    - ('{{ item.endswith("_all.deb") }}') or ('{{item.endswith("_" + arch_map[ansible_architecture] +".deb")}}')

- name: 安装系统依赖包
  command: "dpkg -i -R /tmp/apt"
  when: 'INSTALL_SOURCE == "offline"'
  ignore_errors: true