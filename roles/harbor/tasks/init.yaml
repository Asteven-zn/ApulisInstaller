- name: 创建 data 目录
  file:
    path: "{{HARBOR_LOCATION}}"
    state: directory
    mode: 0755

# 注册变量 result，如果 {{HARBOR_LOCATION}} 目录下存在 registry 目录说明已经安装过 harbor，则不进行安装
- name: 注册变量 result
  command: ls {{HARBOR_LOCATION}}
  register: result

- block:
    - name: 下发 docker compose 二进制文件
      copy: src={{ base_dir }}/bin/{{ arch_map[ansible_architecture] }}/docker-compose dest={{ bin_dir }}/docker-compose mode=0755

    - name: 下发 harbor 离线安装包
      copy:
        src: "{{ base_dir }}/resources/images/harbor-offline-installer-{{ HARBOR_VER }}.tgz"
        dest: "{{HARBOR_LOCATION}}/harbor-offline-installer-{{ HARBOR_VER }}.tgz"

    - name: 解压 harbor 离线安装包
      shell: "cd {{HARBOR_LOCATION}} && tar zxf harbor-offline-installer-{{ HARBOR_VER }}.tgz"

    - name: 导入 harbor 所需 docker images
      shell: "{{ bin_dir }}/docker load -i {{HARBOR_LOCATION}}/harbor/harbor.{{ HARBOR_VER }}.tar.gz"

    - block:
        - name: 生成自签名证书相关
          copy: src={{ base_dir }}/.cluster/ssl/{{ item }} dest={{ ca_dir }}/{{ item }}
          with_items:
            - ca.pem
            - ca-key.pem
            - ca-config.json

        - name: 创建 harbor 证书请求
          template: src=harbor-csr.json.j2 dest={{ ca_dir }}/harbor-csr.json

        - name: 创建 harbor 证书和私钥
          shell: "cd {{ ca_dir }} && {{ bin_dir }}/cfssl gencert \
            -ca={{ ca_dir }}/ca.pem \
            -ca-key={{ ca_dir }}/ca-key.pem \
            -config={{ ca_dir }}/ca-config.json \
            -profile=kubernetes harbor-csr.json | {{ bin_dir }}/cfssljson -bare harbor"
      when: SELF_SIGNED_CERT == 'yes'

    - name: 复制 download 目录下 harbor 证书
      copy: src={{ base_dir }}/download/{{ item }} dest={{ ca_dir }}/{{ item }}
      with_items:
        - ca.pem
        - harbor.pem
        - harbor-key.pem
      when: SELF_SIGNED_CERT == 'no'

    - name: 配置 harbor.yml 文件
      template: src=harbor-{{ HARBOR_VER_MAIN }}.yml.j2 dest={{HARBOR_LOCATION}}/harbor/harbor.yml
      when: HARBOR_VER_MAIN in ["v2.1"]

    - name: 安装 harbor --with-clair
      shell: "cd {{HARBOR_LOCATION}}/harbor && \
        export PATH={{ bin_dir }}:$PATH && \
        ./install.sh  --with-clair"

  when: '"registry" not in result.stdout'

- name: Creating cert dir for the docker daemon
  file: name=/etc/docker/certs.d/{{ HARBOR_HOSTNAME }}:{{HARBOR_HTTPS_PORT}} state=directory

- name: Installing the HARBOR SERVER's CA cert for docker
  copy: src={{ base_dir }}/download/ca.pem dest=/etc/docker/certs.d/{{ HARBOR_HOSTNAME }}:{{HARBOR_HTTPS_PORT}}/ca.crt

- name: Adding an '/etc/hosts' entry for the HARBOR DOMAIN
  lineinfile:
    dest: /etc/hosts
    state: present
    regexp: '{{ HARBOR_DOMAIN }}'
    line: "{{ groups['harbor'][0] }} {{ HARBOR_DOMAIN }}"
  when: "HARBOR_DOMAIN != ''"
